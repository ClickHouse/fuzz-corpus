select
    arrayMap(x, y -> floor((y - x) / x, 3), l, r) diff_percent,
    test, query
from (select [1] l) s1,
    (select [2] r) s2,
    (select 'test' test, 'query' query) any_query,
    (select 2 ) check_single_query;

select
    arrayMap(x -> floor(x, 4), original_medians_array.medians_by_version[1] as l) l_rounded,
    arrayMap(x -> floor(x, 4), original_medians_array.medians_by_version[2] as r) r_rounded,
    arrayMap(x, y -> floor((y - x) / x, 3), l, r) diff_percent,
    test, query
from (select 1) rd,
    (select [[1,2], [3,4]] medians_by_version) original_medians_array,
    (select 'test' test, 'query' query) any_query,
    (select 1 as A) check_single_query;

drop table if exists table;
create table table(query String, test String, run UInt32, metrics Array(UInt32), versiotual_run, random_label
            from
            (
                select *, tvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvoUInt31(rowNumberInAllBlocks() % 2) random_label
                from
                (
                    select metrics, number virtual_run
                    om table
) any_query,
(
    select throwIf(uniq((test, query))) from table
) check_single_query;

drop table table;
