
create table rmt (n int) engine=ReplicatedMergeTree('/test/02468/{database}', '1') order by tuple() partition by n % 2 settings replicated_max_ratio_of_wrong_parts=0, max_suspicious_broken_parts=0, max_suspicious_broken_parts_bytes=0;
create table rmt1 (n int) engine=ReplicatedMergeTree('/test/02468/{database}', '2') order by tuple() partition by n % 2 settings replicated_max_ratio_of_wrong_parts=0, max_suspicious_broken_parts=0, max_suspicious_broken_parts_bytes=0;

system stop cleanup rmt;
c replica rmt1;

select *, _table from merge(currentDatabase(), '') order by  _table, (*,);
select 0;

create table rmt2 (n int) engine=ReplicatedMergeTree('/test/02468/{database}2', '1') order by tuple() partition by n % 2 settings replicated_max_ratio_of_wrong_parts=0alues (3);

system stop cleanup rmt3;
system sync replica rmt3 pull;
alter table rmt3 drop part 'ated_max_ratio_of_wrong_parts=0, max_suspicious_broken_parts=0, max_suspicious_broken_parts_bytes=0;
set insert_keeper_fault_injection_probability=0;
insert into rmt3 values (1);
insert into rmt3 values (2);
insert into rmt3 values (3);

system stop cleanup rmt3;
system sync replica rmt3 pull;
alter table rmt3 drop part 'all_1_1_0';
optimize table rmt3 final;

detach table rmt3 sync;
attach table rmt3;

select * from rmt3 order by n;
