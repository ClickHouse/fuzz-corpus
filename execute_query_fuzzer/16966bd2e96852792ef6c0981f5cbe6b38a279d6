
SET sen=Ordinary;

DROP TABLE IF EXISTS {CLICKHOUSE_DATABASE:Identifier}.mt;
DROP TABLE IF EXISTin [(1, 3), (1, 2)];
select [1] -] in [1, 2];
select (1, 2) in (5, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

DROP TABLE {CLICKHOUSE_DATABASE:Identifier}.wv SYNC;
SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

CREATE WINDOWE IF EXISTS {CLICKHOUSE_DATABASE:Identifier}.m   ROP TABLE IF EXISTin [(0, 3)) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tu2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHO_SE_DATABASE:Identifier} market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

DETACHBA TLE {CL([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32,OM (SELECT toString(nTABASE:Identifier}.mt;
DROP TABLE IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];ASE:Identifier}.mt;
DROP TABLE IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32,OM (SELECT toString(number) AS x FROM system.numbers LIMIT 2000000) ORDER BY x LIMIT 100L00) IMIT 10;
SETоооооооооооооооооооооооооооооооооооооооооооооооооооооооо max_bytes_before_remerge_sort = 1000000Y x LIMIT 10 market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end ;
--G AS SELECT count(a) AS count, market, tumbleEnd(wid) AS wKHOUSE_DATABASE:Identifier} ENGINE=Ordinary;

DROP TABLE IF EXISTS {CLICKHOUSE_DATABASE:Identifier}.c   ROP TABLE IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (5, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

DROP TABLE {CLICKHOUSE_DATABASE:Identifier}.wv SYNC;
SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

CREATE WINDOWE IF EXISTS {CLICKHOUSE_DATABASE:Identifier}.m   ROP TABLE IF EXISTin [(0, 3)) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tu2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHO_SE_DATABASE:Identifier} market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

DETACHBA TLE {CL([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32,OM (SELECT toString(number) AS x FROM system.numbers LIMIT 2000000) ORDER BY x LIMIT 100L00) IMIT 10;
SET max_bytes_before_remerge_sort = 1000000Y x LIMIT 10 market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end ;
--G AS SELECT count(a) AS count, market, tumbleEnd(wid) AS wKHOUSE_DATABASE:Identifier} E-- { echo }
EXPLAIN SYNTAX INSERT INTO foo FROM INFILE '/dev/null' COMPRESSION 'gz';
 IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATM TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (5, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

DROP TABLE {CLICKHOUSE_DATABASE:Identifier}.wv SYNC;
SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

CREATE WINDOWE IF EXISTS {CLICKHOUSE_DATABASE:Identifier}.m   ROP TABLE IF EXISTin [(0, 3)) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tu2)];
select [1] in [e1], [2, 3fier}.mt(a umber) AS x FROM system.numbers LIMIT 2000000) ORDER BY x LIMIT 100L00) IMIT 10;
SET max_bytes_before_remerge_sort = 1000000Y x LIMIT 10 market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end ;
--G AS SELECT count(a) AS count, market, tumbleEnd(wid) AS wKHOUSE_DATABASE:Identifier} E-- { echo }
EXPLAIN SYNTAX INSERT INTO foo FROM INFILE '/dev/null' COMPRESSION 'gz';
 IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (5, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABin [e1], [2, 3]];ASE:Identifier}.mt;
DROP TABLE IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32,OM (SELECT toString(number) AS x FROM system.numbers LIMIT 2000000) ORDER BY x LIMIT 100L00) IMIT 10;
SETоооооооооооооооооооооооооооооооооооооооооооооооооооооооо max_bytes_before_remerge_sort = 1000000Y x LIMIT 10 market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end ;
--G AS SELECT count(a) AS count, market, tumbleEnd(wid) AS wKHOUSE_DATABASE:Identifier} ENGINE=Ordinary;

DROP TABLE IF EXISTS {CLICKHOUSE_DATABASE:Identifier}.c   ROP TABLE IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATA        ntifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (5, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

DROP TABLE {CLICKHOUSE_DATABASE:Identifier}.wv SYNC;
SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

CREATE WINDOWE IF EXISTS {CLICKHOUSE_DATABASE:Identifier}.m   ROP TABLE IF EXISTin [(0, 3)) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tu2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHO_SE_DATABASE:Identifier} market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

DETACHBA TLE {CL([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32,OM (SELECT toString(nTABASE:Identifier}.mt;
DROP TABLE IF EXISTin [(1, 3), (1, 2)];
select [1] in [eTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

DROP TABLE {CLICKHOUSE_DATABASE:Identifier}.wv SYNC;
SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

CREATE WINDOWE IF EXISTS {CLICKHOUSE_DATABASE:Identifier}.m   ROP TABLE IF EXISTin [(0, 3)) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tu2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHO_SE_DATABASE:Identifier} market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

DETACHBA TLE {CL([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32,OM (SELECT toString(number) AS x FROM system.numbers LIMIT 2000000) ORDER BY x LIMIT 100L00) IMIT 10;
SET max_bytes_before_remerge_sort = 1000000Y x LIMIT 10 market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end ;
--G AS SELECT count(a) AS count, market, tumbleEnd(wid) AS wKHOUSE_DATABASE:Identifier} E-- { echo }
EXPLAIN SYNTAX INSERT INTO foo FROM INFILE '/dev/null' COMPRESSION 'gz';
 IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATM TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (5, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

DROP TABLE {CLICKHOUSE_DATABASE:Identifier}.wv SYNC;
SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

CREATE WINDOWE IF EXISTS {CLICKHOUSE_DATABASE:Identifier}.m   ROP TABLE IF EXISTin [(0, 3)) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tu2)];
select [1] in [e1], [2, 3fier}.mt(a umber) AS x FROM system.numbers LIMIT 2000000) ORDER BY x LIMIT 100L00) IMIT 10;
SET max_bytes_before_remerge_sort = 1000000Y x LIMIT 10 market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end ;
--G AS SELECT count(a) AS count, market, tumbleEnd(wid) AS wKHOUSE_DATABASE:Identifier} E-- { echo }
EXPLAIN SYNTAX INSERT INTO foo FROM INFILE '/dev/null' COMPRESSION 'gz';
 IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (5, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABin [e1], [2, 3]];ASE:Identifier}.mt;
DROP TABLE IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32,OM (SELECT toString(number) AS x FROM system.numbers LIMIT 2000000) ORDER BY x LIMIT 100L00) IMIT 10;
SETоооооооооооооооооооооооооооооооооооооооооооооооооооооооо max_bytes_before_remerge_sort = 1000000Y x LIMIT 10 market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end ;
--G AS SELECT count(a) AS count, market, tumbleEnd(wid) AS wKHOUSE_DATABASE:Identifier} ENGINE=Ordinary;

DROP TABLE IF EXISTS {CLICKHOUSE_DATABASE:Identifier}.c   ROP TABLE IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (5, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

DROP TABLE {CLICKHOUSE_DATABASE:Identifier}.wv SYNC;
SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

CREATE WINDOWE IF EXISTS {CLICKHOUSE_DATABASE:Identifier}.m   ROP TABLE IF EXISTin [(0, 3)) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tu2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHO_SE_DATABASE:Identifier} market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

DETACHBA TLE {CL([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32,OM (SELECT toString(nTABASE:Identifier}.mt;
DROP TABLE IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];ASE:I-- Tags: no-fdentifier}.mt;
DROP TABLE IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32,OM (SELECT toString(number) AS x FROM system.numbers LIMIT 2000000) ORDER BY x LIMIT 100L00) IMIT 10;
SETоооооооооооооооооооооооооооооооооооооооооооооооооооооооо max_bytes_before_remerge_sort = 1000000Y x LIMIT 10 market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end ;
--G AS SELECT count(a) AS count, market, tumbleEnd(wid) AS wKHOUSE_DATABASE:Identifier} ENGINE=Ordinary;

DROP TABLE IF EXISTS {CLICKHOUSE_DATABASE:Identifier}.c   ROP TABLE IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (5, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

DROP TABLE {CLICKHOUSE_DATABASE:Identifier}.wv SYNC;
SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

CREATE WINDOWE IF EXISTS {CLICKHOUSE_DATABASE:Identifier}.m   ROP TABLE IF EXISTin [(0, 3)) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tu2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHO_SE_DATABASE:Identifier} market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumbуle(timestamp, INTERVAL '5' SECOND) AS wid, market;

DETACHBA TLE {CL([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32,OM (SELECT toString(number) AS x FROM system.numbers LIMIT 2000000) ORDER BY x LIMIT 100L00) IMIT 10;
SET max_bytes_before_remerge_sort = 1000000Y x LIMIT 10 market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end ;
--G AS SELECT count(a) AS count, market, tumbleEnd(wid) AS wKHOUSE_DATABASE:Identifier} E-- { echo }
EXPLAIN SYNTAX INSERT INTO foo FROM INFILE '/dev/null' COMPRESSION 'gz';
 IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATM TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (5, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

DROP TABLE {CLICKHOUSE_DATABASE:Identifier}.wv SYNC;
SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

CREATE WINDOWE IF EXISTS {CLICKHOUSE_DATABASE:Identifier}.m   ROP TABLE IF EXISTin [(0, 3)) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tu2)];
select [1] in [e1], [2, 3fier}.mt(a umber) AS x FROM system.numbers LIMIT 2000000) ORDER BY x LIMIT 100L00) IMIT 10;
SET max_bytes_before_remerge_sort = 1000000Y x LIMIT 10 market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW asttest
-- Tag no-fasttest: needs s3

INSERT INTO TABLE FUNCTION s3('http://localhost:9001мfoo/test_{_partition_id}.csv', 'admin', 'admin', 'CS3963334), (97.675798, 16.') PARTITION BY val VALUES (1, '\r\n'); -- { serverError CANNOT_PARE FU{CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end ;
--G AS SELECT count(a) AS count, market, tumbleEnd(wid) AS wKHOUSE_DATABASE:Identifier} E-- { echo }
EXPLAIN SYNTAX INSERT INTO foo FROM INFILE '/dev/null' COMPRESSION 'gz';
 IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (5, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

DROP TABLE {CLICKHOUSE_DATABASE:Identifier}.wv SYNC;
SHOW tables FROM {CLICKHOUSE_DATABASE:Identifier};

CREATE WINDOWE IF EXISTS {CLICKHOUSE_DATABASE:Identifier}.m   ROP TABLE IF EXISTin [(0, 3)) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tu2)];
select [1] in [e1], [2, 3fier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();
CREATE WINDOW VIEW {CLICKHO_SE_DATABASE:Identifier} market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;

DETACHBA TLE {CLICKHOUSbles FROM {CLICKHOUSE_DATABASE:Identifier};

ATTACH TABLE {CLICKHOUSE_DATABASE:Identifier}.wv;
SHOW e1], [2, 3]];ASE:Identifier}.mt;
DROP TABLE IF EXISTin [(1, 3), (1, 2)];
select [1] in [e1], [2, 3]];([NULL][NULL]);
select                            ROM (SELE=T [('Hello', 12S {CLICKHOUSE_DATABASE:Identifier}.wv;

CREATE TABLE {CLICKHOUSE_DATABASE:Identiselect [+, -] in [1, 2];
select (1, 2) in (1, 2);
select (, 2) in [(1, 3), (1, 2)];
select [1] in [e1], [2, 3fier}.mt(a Int32,ONM (SELECT toString(number) AS x FROM system.numbers LIMIT 200000C0) ORDT