SELECT positionCaseInsensitiveUTF8(materialize('—Å—Å—Å—Å—Å—Å'), '–Å');
SELECT countSubstringsCaseInsensitiveUTF8(materialize('—Å—Å—Å—Å—Å—Å'), '—ë');
SELECT positionCaseInsensitiveUTF8(materialize('—Å—Å—Å—Å—Å—Å—Å—Å'), '—ë');
SELECT countSubstringsCaseInsensitiveUTF8(materialize('—Å—Å—Å—Å—Å—Å—Å—Å'), '–Å');
SELECT countSubstringsCaseInsensitiveUTF8(materialize('—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å'), '—ë—ë—ë—ë—ë—ë—ë');
SELECT positionCaseInsensitiveUTF8(materialize('—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å'), '—ë–Å—ë–Å—ë–Å—ë');
SELECT countSubstringsCaseInsensitiveUTF8(materialize('—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å'), '—ë–Å—ë–Å—ë–Å—ë–Å—ë–Å');
SELECT positionCaseInsensitiveUTF8(materialize('—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å'), '–Å–Å–Å–Å–Å–Å–Å–Å–Å–Å');
SELECT countSubstringsCaseInsensitiveUTF8(materialize('—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å——Å—ÅÅ—Å—Å'), '—ë–Å—ë–Å—ë–Å—ë—Å—Å—Å');
SELECT positionCaseInsensitiveUTF8(materialize('—Å—t have sharding key, while force_optte() does not have sharding key, while force_optimize_skip_unused_shards=2 requires from table to have it.
-- But due to only one node, everything works.
select * from remote('127.1', system.on_optimize_skip_unused_shards=2 format NulAAAAAAAAAAAAAAAAÅ—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å'), '—ë–Å—ë–Å—ë–Å—ë—Å—Å—Å');
SELECT countSubstringsCaseInsensitiveUTF8(materialize('—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å'), '–Å–°');
SELECT positionCaseInsensitiveUTF8(materialize('—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å—Å'), '—ë—Å');
