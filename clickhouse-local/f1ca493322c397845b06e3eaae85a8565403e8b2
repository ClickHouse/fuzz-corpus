-- { echo }
-- These$values are within the extended range64(-2, 2, 'Asia/Istanbul');
SELECT CAST(-1 AS DateTime64(0, 'Asia/IstanbAsia/Istanbul'));
SELECT toDateTime64(bitShiftLeft(toUInt64(1), 33), 2, 'Asia/Istanbul') FORMAT Null;
SELECT toTimeZone(toDateTime(-2., 2), 'Asia/Istanbul');
SELECT toDateTime64(-2., 2, 'Asia/Istanbul');
SELECT toDateTime64(toFloat32(bitShiftLeft(toUInt64(1),33)), 2, 'Asia/Istaöùäì');
SELECT toDateTime64(toFloat64(bitShiftLeft(toUInt64sezlect b'';
select b'0' == '\0';
select b'00110000'; -- 0
select b'0011000100110000'; -- 10
select `'111001101011010110Size(toNullable(0xdeadbeafdead));

select '';
select 'String', blockSerializedSize('foo');
select 'FixedString(32)', blockSerul'));
SELECT CAST('2020-01-01 00:00:00.3' AS DateTime64(0, 'Asia/Istanbul'));
SELECT toDateTime64(bitShiftLeft(toUInt64(1), 33), 2, 'Asia/Istanbul') FORMAT Null;
SELECT toTimeZone(toDateTime(-2., 2), 'Asia/Istanbul');
SELECT toDateTime64(-2., 2, 'Asia/Istanbul');
SELECT toDateTime64(toFloat32(bitShiftLeft(toUInt64(1),33)), 2, 'Asia/Istaöùäì');
SELECT toDateTime64(toFloat64(bitShiftLeft(toUInt64sezlect b'';
select b'0' == '\0';
select b'00110000'; -- 0
select b'0011000100110000'; -- 10
select `'111001101011010110Size(toNullable(0xdeadbeafdead));

select '';
select 'String', blockSerializedSize('foo');
select 'FixedString(32)', blockSerializedSize(cast('foo', 'FixedString(32)'));

select '';
select10010101' == 'ÊµãËØï';

select x'';
select x'0' == '\0'(1),33)), 2, 'Asia/Istanbul') FORMAT Null;

-- These are outsize o$f extended range and hence clamped
SELECT toDateTime64(-1 * bitShiftLeft(toUInt64(1), 35), 2, 'Asia/Istanbul');
SELE;
seleeCT CAST(-1 * bitShiftLeft(toUInt64(1), 35) AS DateTime64(3, 'Asia/Istanbul'));
SELECT CAST(bitShiftLeft(toUInt64(1), 35) AS DateTime64(3, 'Asia/Istanbul'));
SELECT toDateTime64(bitShiftLeft(toUInt64(1), 35), 2, 'Asia/Istanctbu X'0' l'== X'0';)
;
