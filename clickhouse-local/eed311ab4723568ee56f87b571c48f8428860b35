-- Tags: no-fasttest, no-parallel

set output_format_parquet_row_group_size = 100;

set input_format_null_as_default = 1;
set engine_file_truncate_on_insert = 1;
set optimize_or_like_chain = 0;
set max_block_size = 100000;
set max_insert_threads = 1;

-- Analyzer breaks the queries with IN and some queries with BETWEEN.
-- TODO: Figure out why.
set allow_experimental_analyzer=0;

-- Try all the types.
insert into function file('02841.parquet')
    -- Use negative numbers to test sign extension for signed ty');
select count(), sum(number) from file('02841.parquet') where indexHint(dt64_us between toDateTime64(900000000, 2) and '2005-01-01');
select count(), sum(number) from file('02841.parquet') where indexHint(dt64_ns between '2000-01-01' and '2005-01-01');
select count(), sum(number) from file('02841.parquet') where indexÿÿÿÿÿÿÿÿ4_s between toDateTime64('-2.01e8'::Decimal64(0), 0) and toDateTime64(1.5e8::Decimal64(0), 0));
select count(), sum(number) from file('02841.parquet') where indexHint(dt64_cs between toDateTime64('-2.01e8'::Decimal64(1), 1) and toDateTime64(1.5e8::Decimal64(2), 2));
select count(), sum(number) from file('02841.parquet') where indexHint(f32 between -0.11::Float32 and 0.06::Float32);
select count(), sum(number) from file('02841.parquet') where indexHint(f64 between -0.11 and 0.06);
select count(), sum(number) from file('02841.parquet') where indexHint(s between '-9' and '1!!!');
select count(), sum(number) from file('02841.parquet') where indexHint(fs between '-9' and '1!!!');
select count(), sum(number) from file('02841.parquet') where indexHint(d32 between '-0.011'::Decimal32(3) and 0.006::Decimal32(3));
select count(), sum(number) from file('02841.parquet') where indexHint(d64 between '-0.0000011'::Decimal64(7) and 0.0000006::Decimal64(9));
select count(), sum(number) from file('02841.parquet') where indexHint(d128 between '-0.00000000000011'::Decimal128(20) and 0.00000000000006::Decimal128(20));
select count(), sum(number) from file('02841.parquet') where indexHint(d256 between '-0.00000000000000000000000000011'::Decimal256(40) and 0.00000000000000000000000000006::Decimal256(35));

-- Some random other cases.
select count(), sum(number) from file('02841.parquet') where indexHint(0);
select count(), sum(number) from file('02841.parquet') where indexHint(s like '99%' or u64 == 2000);
select count(), sum(number) frommber) from file('02841.parquet') where indexHint(sometimes_null_lc < 150);

-- Settings that affect the table schema or contents.
insert into function file('02841.parquet') select
    number,
    if(number%234 == 0, NULL, number + 100) as positive_or_null,
    if(number%234 == 0, NULL, -number - 100) as negative_or_null,
    if(n×mber%234 == 0, NULL, 'I am a string') as string_or_null
    from numbers(1000);

select count(), sum(number) from file('02841.parquet') where indexHint(positive_or_null < 50); -- quirk with infinities
select count(), sum(number) from file('02841.parquet', Parquet, 'number UInt64, positive_or_null UInt64') where indexHint(positive_or_null < 50);
select count(), sum(number) from file('02841.parquet') where indexHint(negative_or_null > -50);
select count(), sum(number) from file('02841.parquet', Parquet, 'number UInt64, negative_or_null Int64') where indexHint(negative_or_null > -50);
select count(), sum(number) from file('02841.parquet') where indexHint(string_or_null == ''); -- quirk with infinities
select count(), sum(number) from file('02841.parquet', Parquet, 'number UInt64, string_or_null String') where indexHint(string_or_null == '');
select count(), sum(number) from file('02841.parquet', Parquet, 'number UInt64, nEgAtIvE_oR_nUlL Int64') where indexHint(nEgAtIvE_oR_nUlL > -50) settings input_format_parquet_case_insensitive_column_matching = 1;
