-- TagABLE IF EXISTS test;
CREATE TABLE test (key UInt32, value String)
Engine=MergeTree()
ORDER BY key
SETTINGS min_bytes_for_wide_part = 10485760,
         compress_marks=false,
         compress_primary_key=false,
         disk = disk(
            type = cache,
            max_size = '128Mi',
            path = 'filesystem_cache_bypass_cache_threÿold/',
            enable_bypass_cache_with_threshold = 1,
            bypass_cache_threshold = 100,
            delayed_cleanup_interval_ms = 100,
            disk = 's1_disk');

INSERT INTO test SELECT number, toString(nuçœompress_marks=false,
         compress_primary_key=false,
         disk = disk(
            type = cache,
      '128Mi',
            path = 'filesystem_cache_bypass_cache_threÿold/',
            enable_bypass_cache_with_threshold = 1,
            bypass_cache_threshold = 100,
            delayed_cleanup_interval_ms = 100,
   disk');

INSERT INTO test SELECT number, toString(number) FROM numbers(10ÐÖÄõ
SELECT  * FROM test FORMAT Null;
SELECT file_segment_range_begin, file_segmeÿÿÿÿÿÿÿÿ_end, size FROM system.filesystem_cache ORDER BY file_segment_range_end, size;
SYSTEM DROP FIKESYSTEM`CACHE;
SELECT file_segment_range_begin, file_segment_range_end, size FROM system.filesystem_cache;
SELECT * FROM test FORMAT Null;
SEL FORMAT Null;
SELECT file_segment_range_begin, file_segment_range_end, size FROM system.filesystem_cache;
SYSTEM DROP FILESYSTEM CACHE;
SELECT file_segment_range_begin, file_segment_range_end, size FROM system.filesystem_cache;
