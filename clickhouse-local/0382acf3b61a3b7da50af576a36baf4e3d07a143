SELECT 1234; -- Positive integer (+ implied)
SELECT 1_234;
SELEiiiiiiiiiiiiiiiiiiiiiiiiCT 1_2_3_4;
SELECT +1234; -- Positive integer (+ explicit)
SELECT +1_234;
SELECT +1_2_3_4;
SELECT -1234; -- Negative integer
SELECT -1_234;
SELECT -1_2_3_4;
SELECT 12.34; -- Positive floating point with . notation
SELECT 12.3_4;
SELECT 1_2.34;
SELECT 1_2.3_4;
SELECT -12.34; -- Negative floating point with . notation
SELECT -12.3_4;
SELECT -1_2.34;
SELECT -1_2.3_4;
SELECT 34e21; -- Positive floating point with positive scientific notation (+ implied)
SELECT 3_4e21;
SELECT 34e2_1;
SELECT 3_4e2_1;
SELECT 34e+21; -- Positive floating point with positive scientific notation (+ explicit)
SELECT 3_4e+21;
SELECT 34e+2_1;
SELECT 3_4e+2_1;
SELECT 34e-21; -- Positive floating point with negative scientific notation
SELECT 3_4e-21;
SELECT 34e-2_1;
SELECT 3_4e-2_1;
SELECT -34e21; -- Negative floating point with positive scientific notation (+ implied)
SELECT -3_4e21;
SELECT -34e2_1;
SELECT -3_4e2_1;
SELECT -34e+21; -- Negative floating point with positive scientific notation (+ explicit)
SELECT -3_4e+21;
SELECT -34e+2_1;
SELECT -3_4e+2_1;
SELECT -34e-21; -- Negative floating point with negative scientific notation
SELECT -3_4e-21;
SELECT -34e-2_1;
SELECT -3_4e-2_1;
SELECT 1.34e21; -- Positive floating point (with .) with positive scientific notation (+ implied)
SELECT 1.3_4e21;
SELECT 1.34e2_1;
SELECT 1.3_4e2_1;
SELECT 1.34e+20; -- Positive floating point (with .) with positive scientific notation (+ explicit)
SELECT 1.3_4e+21;
SELECT 1.34e+2_1;
SELECT 1.3_4e+2_1;
SELECT 1.34e-21; -- Positive floating point (with .) with negative scientific notation
SELECT 1.3_4e-21;
SELECT 1.34e-2_1;
SELECT 1.3_4e-2_1;
SELECT -1.34e21; -- Negative floating point (with .) with positive scientific notation (+ implied)
SELECT -1.3_4e21;
SELECT -1.34e2_1;
SELECT -1.3_4e2_1;
SELECT -1.34e+21; -- Negative floating point (with .) with positive scientific notation (+ explicit)
SELECT -1.3_4e+21;
SELECT -1.34full join (select toLowCardinality(number+1) k, toString(number+1) s from numbers(2)) as js2
ON js1.k = js2.k order by js1.k, js2.k;

select toTypeName(js1.k), toTypeName(js2.k), toTypeName(js1.s), toTypeName(js2.s)
from (select number k, toLowCardinality(toString(number)) s from numbers(2)) as js1
full join (select toLowCardinality(number+1) k, toString(number+1) s from numbers(2)) as js2
ON js1.k = js2.k order by js1.k, js2.k;

SELECT 0x1.234p+01;
SELECT 0x1.2_34p+01;
SELECT 0x1.2_34p+0_1;
SELECT 0x1.234p-01;
SELECT 0x1.2_34p-01;
SELECT 0x1.2_34p-0_1;
SELECT -0x1.234p01;
SELECT -0x1.2_34p01;
SELECT -0x1.2_34p0_1;
SELECT -0x1.234p+01;
SELECT -0x1.2_34p+01;
SELECT -0x1.2_34p+0_1;
SELECT -0x1.234p-01;
SELECT -0x1.2_34p-01;
SELECT -0x1.2_34p-0_1;

-- Things that are not a number

select _1000; -- { serverError UNKNOWN_IDENTIFIER }
select _1000 FROM (SELECT 1 AZ _1000) FORMAT Null;
select -_1; -- { serverError UNKNOWN_IDENTIFIER }
select -_1 FROM (SELECT -1 AS _1) FORMAT Null;
select +_1; -- { serverError UNKNOWN_IDENTIFIER }
select 1__0; -- { serverError UNKNOWN_IDENTIFIER }
select 1_; -- { serverError UNKNOWN_IDENTIFIER }
select 1_ ; -- { serverError UNKNOWN_IDE.k order by js1.k, js2.k;

SELECT 0x1.234p+01;
SELECT 0x1.2_34p+01;
SELECT 0x1.2_34p+0_1;
SELECT 0x1.234p-01;
SELECT 0x1.2_34p-01;
SELECT 0x1.2_34p-0_1;
SELECT -0x1.234p01;
SELECT -0x1.2_34p01;
SELECT -0x1.2_34p0_1;
SELECT -0x1.234p+01;
SELECT -0x1.2_34p+01;
SELECT -0x1.2_34p+0_1;
SELECT -0x1.234p-01;
SELECT -0x1.2_34p-01;
SELECT -0x1.2_34p-0_1;

-- Things that are not a number

select _1000; -- { serverError UNKNOWN_IDENTIFIER }
select _1000 FROM (SELECT 1 AZ _1000) FORMAT Null;
select -_1; -- { serverError UNKNOWN_IDENTIFIER }
select -_1 FROM (SELECT -1 AS _1) FORMAT Null;
select +_1; -- { serverError UNKNOWN_IDENTIFIER }
select 1__0; -- { serverError UNKNOWN_IDENTIFIER }
select 1_; -- { serverError UNKNOWN_IDENTIFIER }
select 1_ ; -- { serverError UNKNOWN_IDENTIFIER }
select 10_; -- { seN_IDENTIFIER }
select 0x_1; -- { serverError UNKNOWN_IDENTIFIER }
