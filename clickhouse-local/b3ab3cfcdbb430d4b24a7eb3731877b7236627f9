
SET allow_experimental_analyzer = 0;

SET join_use_nulls = 0;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
SEMI LEFT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 0;

SET join_use_nulls = 0;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
SEMI LEFT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 0;

SET join_use_nulls = 0;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
ANTI LEFT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analizer = 0;

SET join_use_nulls = 0;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI LEFT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 0;

SET join_use_nulls = 0;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 0;

SET join_use_nulls = 0;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 0;

SET join_use_nulls = 0;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING inal' AS source, number as inter FROM numbers(10) WHERE number % 3 = 1
) ORDER BY n WITH FILL FROM 0 TO 11.51 STEP 0.5 INTERPOLATE (inter AS inter);

# Test INTERPOLATE with expression
SELECT n, source, inter FROM (
   SELECT toFloat32(number % 10) AS n, 'original' AS source, number as inter FROM numbers(10) WHERE number % 3 = 1
) ORDER BY n WITH FILL FROM 0 TO 11.51 STEP 0.5 INTERPOLATE (inter AS inter + 1);

# Test INTERPOLATE with incompatible const - should produce error
SELECT n, source, inter FROM (
   SELECT toFloat32(number % 10) AS n, 'original' AS source, number as inter FROM numbers(10) WHERE number % 3 = 1
) ORDER BY n WITH FILL FROM 0 TO 11.51 STEP 0.5 INTERPOLATE (inter AS 'inter'); -- { serverError 6 }

# Test INTERPOLATE with incompatible expression - should produce error
SELECT n, source, inter FROM (
   SELECT toFloat32(number % 10) AS n, 'original' AS source, number as inter FROM numbers(10) WHERE number % 3 = 1
) ORDER BY n WITH FILL FROM 0 TO 11.51 STEP 0.5 INTERPOLATE (inter AS reverse(inter)); -- { serverError 44 }

# Test INTERPOLATE with column from WITH FILL expression - should produce error
SELECT n, source, inter FROM (
   SELECT toFloat32(number % 10) AS n, 'original' AS source, number as inter FROM numbers(10) WHERE number % 3 = 1
) ORDER BY n WITH FILL FROM 0 TO 11.51 STEP 0.5 INTERPOLATE (n AS n); -- { serverError 475 }

# Test INTERPOLATE with inconsistent column - should produce error
SELECT n, source, inter FROM (
   SELECT toFloat32(number % 10) AS n, 'original' AS source, number as inter FROM numbers(10) WHERE number % 3 = 1
) ORDER BY n WITH FILL FROM 0 TO 11.51 STEP 0.5 INTERPOLATE (inter AS source); -- { serverError 6, 32 }

# Test INTERPOLATE with aliased column
SELECT n, source, inter + 1 AS inter_p FROM (
    SELECT toFloat32(number % 10) AS n, 'original' AS source, number AS inter FROM numbers(10) WHERE (number % 3) = 1
) ORDER BY n ASC WITH FILL FROM 0 TO 11.51 STEP 0.5 INTERPOLATE ( inter_p AS inter_p + 1 );

# Test INTERPOLATE with column not present in select
SELECT source, inter FROM (
    SELECT toFloat32(number % 10) AS n, 'original' AS source, numbe(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 0;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
SEMI LEFT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 0;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
SEMI LEFT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 0;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
ANTI LEFT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 0;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI LEFT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 0;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 0;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 0;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS     a
ANTI RIGHT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
ANTI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 0;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 1;

SET join_use_nulls = 0;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) dinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI LEFT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 1;

SET join_use_nulls = 0;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 1;

SET join_use_nulls = 0;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 1;

SET join_use_nulls = 0;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
ANTI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 1;

SET join_use_nulls = 0;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 1;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
SEMI LEFT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 1;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
SEMI LEFT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 1;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
ANTI LEFT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 1;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI LEFT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 1;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 1;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 1;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
ANTI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;

SET allow_experimental_analyzer = 1;

SET join_use_nulls = 1;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;

SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;

SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;

SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;

