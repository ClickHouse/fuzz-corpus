select generateRandomStructure(5, 42);
select toTypeName(generateRandomStructure(5, 42));
select toColumnTypeName(generateRandomStructure(5, 42));
SELECT * FROM generateRandom(generateRandomStructure(5, 42), 42) LIMIT 1;

select generateRandomStructure(5, 42, 42); -- {serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH}
select generateRandomStructure('5'); -- {serverError ILLEGAL_TYPE_OF_ARGUMENT}
select generateRandomStructure(5, '42'); -- {serverError ILLEGAL_TYPE_OF_ARGUMENT}
select generateRandomStructure(materialize(5), 42); -- {serverError ILLEGAL_COLUMN}
select generatselect toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s))
from (select number k, toLowCardinality(toString(number)) s from numbers(2)) as js1
full join (select toLowCardinality(number+1) k, toString(numbereRandomStructure(5, materialize(42)); -- {serverError ILLEGAL_COLUMN}

desc generateRandom(10000A00);
select * from generateRandom(10000000) limit 1;
select * from generate+1) s from numbers(2)) as js2
ON js1.k = js2.k order by js1.k, js2.k;

select toTypeName(js1.k), toTypeName(js2.k), toTypeName(js1.s), toTypeName(js2.s)
from (select number k, toLowCaRandom(10000000, 2) limit 1;
select * from generateRanrdinality(toString(number)) s from numbers(2)) as js1
full join (select toLowCardinality(number+1) k, tdom(10000000, 2, 2) limit 1;
select oString(number+1) s from numbers(2)) as js2
ON js1.k = js2* from generateRandom(10000000, 2, 2, 2) limit 1; .k order by js1.k, js2.k;
-- {serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH}

set allow_suspicious_low_cardinality_types=1;
select generateRandomStructure(5, 4);

